<Window xmlns:View="clr-namespace:VkMusicDiscoveryMVVM.View"  x:Class="VkMusicDiscoveryMVVM.MainView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="clr-namespace:VkMusicDiscoveryMVVM.ViewModel"
        xmlns:local="clr-namespace:VkMusicDiscoveryMVVM"
        mc:Ignorable="d"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:cmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Platform"
        Title="Vk Music Discovery v0.2 MVVM" Height="800" Width="600" MinWidth="400" MinHeight="350" Icon="/VkMusicDiscoveryMVVM;component/VkIcon.ico">
    <Window.Resources>
        <vm:MainViewModel x:Key="MainViewModel"/>
        <Thickness x:Key="ButtonThickness">5</Thickness>
    </Window.Resources>
    <Grid DataContext="{StaticResource MainViewModel}" HorizontalAlignment="Center" VerticalAlignment="Stretch">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" MaxWidth="800"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <View:PlayerControl Grid.ColumnSpan="2" Grid.Row="0" />
        <DataGrid x:Name="DataGridAudio" Grid.Column="0" Grid.Row="1" AutoGenerateColumns="False" 
            CanUserAddRows="False" CanUserReorderColumns="False" CanUserSortColumns="False"
            ItemsSource="{Binding FileteredRecomendedList}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged">
                    <cmd:EventToCommand
                Command="{Binding AuidiosSelChangedCommand}"
                CommandParameter="{Binding SelectedItems,
                    ElementName=DataGridAudio}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <DataGrid.Columns>
                <DataGridTextColumn Header="Artist" Binding="{Binding Artist}"  Width="Auto" MinWidth="100" MaxWidth="400"/>
                <DataGridTextColumn Header="Title" Binding="{Binding Title}" Width="*"/>
            </DataGrid.Columns>
            <DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Block _artist" Command="{Binding MenuItemBlockArtistCommand}"/>
                    <MenuItem Header="Block _song" Command="{Binding MenuItemBlockSongCommand}"/>
                    <Separator/>
                    <MenuItem Header="Copy name" Command="{Binding MenuItemCopeNameCommand}"/>
                    <MenuItem Header="Download" Command="{Binding MenuItemCommand}"/>
                </ContextMenu>
            </DataGrid.ContextMenu>
        </DataGrid>
        <StackPanel Grid.Column="1" Grid.Row="1" Margin="5" HorizontalAlignment="Left">
            <StackPanel.Resources>
                <Style TargetType="{x:Type TextBox}">
                    <Setter Property="Margin" Value="{StaticResource ButtonThickness}"></Setter>
                </Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Margin" Value="{StaticResource ButtonThickness}"></Setter>
                </Style>
            </StackPanel.Resources>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                <TextBlock VerticalAlignment="Center">Count:</TextBlock>
                <TextBox x:Name="TxbCount" VerticalAlignment="Center" Width="28" Text="{Binding Count}" MaxLength="3">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="PreviewTextInput">
                            <cmd:EventToCommand Command="{Binding Mode=OneWay, Path=TxbCountAndOffsetOnInputCommand}"
                                                PassEventArgsToCommand="True"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TextBox>
                <CheckBox x:Name="CbxRandom" VerticalAlignment="Center" IsChecked="{Binding Randomize}">Randomize</CheckBox>
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <TextBlock VerticalAlignment="Center">Offset:</TextBlock>
                <TextBox x:Name="TxbOffset" VerticalAlignment="Center" Width="28" Text="{Binding Offset}" MaxLength="3">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="PreviewTextInput">
                            <cmd:EventToCommand Command="{Binding Mode=OneWay, Path=TxbCountAndOffsetOnInputCommand}"
                                                PassEventArgsToCommand="True"/> 
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TextBox>
            </StackPanel>
            <Button x:Name="BtnRefresh" Command="{Binding BtnRefreshCommand}">Refresh</Button>
            <GroupBox Header="Language" Margin="5,0">
                <StackPanel Orientation="Horizontal">
                    <StackPanel.Resources>
                        <Style TargetType="{x:Type RadioButton}">
                            <Setter Property="Margin" Value="{StaticResource ButtonThickness}"></Setter>
                        </Style>
                    </StackPanel.Resources>
                    <RadioButton x:Name="RbtnLangRu" Content="Ru" IsChecked="{Binding RuLang}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Checked">
                                <cmd:EventToCommand Command="{Binding Mode=OneWay, Path=RbtnsLangCheckedCommand}"
                                                PassEventArgsToCommand="True"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </RadioButton>
                    <RadioButton x:Name="RbtnLangEng" Content="Eng" IsChecked="{Binding EngLang}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Checked">
                                <cmd:EventToCommand Command="{Binding Mode=OneWay, Path=RbtnsLangCheckedCommand}"
                                                PassEventArgsToCommand="True"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </RadioButton>
                    <RadioButton x:Name="RbtnLangAll"  Content="All" IsChecked="{Binding AllLang}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Checked">
                                <cmd:EventToCommand Command="{Binding Mode=OneWay, Path=RbtnsLangCheckedCommand}"
                                                PassEventArgsToCommand="True"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </RadioButton>
                </StackPanel>
            </GroupBox>
            <Grid Margin="5,10,5,0">
                <ProgressBar x:Name="ProgressBarDownload" Height="25" Maximum="{Binding ProgressBarMaximum}"
                             Value="{Binding ProgressBarValue}" VerticalAlignment="Top"/>
                <TextBlock x:Name="TblProgressBar" Text="{Binding ProgressBarText}"
                           HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </Grid>
            <Button x:Name="BtnDownloadall" VerticalAlignment="Top" Margin="5,5,5,5" FontSize="16"
                    Command="{Binding BtnDownloadallCommand}" Content="{Binding BtnDownloadText}"/>
            <CheckBox x:Name="CbxAddToBlock" VerticalAlignment="Top" Margin="5,0">Auto add to block list</CheckBox>
            <CheckBox x:Name="CbxBestBitrate" VerticalAlignment="Top" Margin="5,0"
                      IsChecked="{Binding CbxFindBest}">Find with best bitrate</CheckBox>
            <Button x:Name="BtnEditblocked" Command="{Binding BtnEditBlockedCommand}">Edit blocked content</Button>
        </StackPanel>


    </Grid>
</Window>
